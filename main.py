import telebot
from config import *
from telebot import types
from emoji import emojize
from neiro import Text2ImageAPI
import base64


bot = telebot.TeleBot(TOKEN)
api = Text2ImageAPI(url_api, api_key, secret_key)
name_bot = str(bot.get_me().first_name)


@bot.message_handler(commands=["start"])
def welcome(message):
    stick = open("5203978965076680784.tgs", "rb")
    name_my = str(message.chat.first_name)
    bot.send_sticker(message.chat.id, stick)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ù–∞–π—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É!")
    item2 = types.KeyboardButton("–•–æ—á—É –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç {name_my}!!! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–Ø {name_bot} - —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –û–ª–µ–≥–∞.",
    parse_mode="html", reply_markup=markup)

def message_input_step(message):
    text = message.text
    model_id = api.get_model()
    uuid = api.generate(text.lower(), model_id)
    images = api.check_generation(uuid)
    image_base64 = images[0]
    image_data = base64.b64decode(image_base64)
    with open("image.jpg", "wb") as file:
        file.write(image_data)
        bot.reply_to(message, "–í–æ—Ç, —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É.\n–ù–∞–¥–µ—é—Å—å —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç—ã –∏—Å–∫–∞–ª –¥—Ä—É–∂–∏—â–µüòá")
    return bot.send_photo(message.chat.id, photo=image_data)


@bot.message_handler(content_types=["text"])
def funcy(message):
    if message.chat.type == "private":
        if message.text == "–ù–∞–π—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É!":
            bot.reply_to(message, "–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç, –∞ —è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É!\n–¢–æ–ª—å–∫–æ –ø—Ä–∏–¥–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—åüòâ")
            bot.register_next_step_handler(message, message_input_step)
        elif message.text == "–•–æ—á—É –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!":
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton(emojize("–£–≤–µ—Ä–µ–Ω:grinning_face:"), callback_data="sure")
            item2 = types.InlineKeyboardButton(emojize("–ü–µ—Ä–µ–¥—É–º–∞–ª:unamused_face:"), callback_data="change my mind")
            markup.add(item1, item2)

            bot.send_message(message.chat.id, "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ, —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º!", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, f"{name_bot} –Ω–µ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.data == "sure":
            bot.send_message(call.message.chat.id, emojize("–¢–æ–≥–¥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –¥—Ä—É–∂–∏—â–µ:smiling_face_with_sunglasses:"))
            bot.send_message(call.message.chat.id, "–ü—Ä–æ–º–æ–∫–æ–¥: Luckyman\n https://videoforme.ru/course/crypto-trading-courses")

        elif call.data == "change my mind":
            bot.send_message(call.message.chat.id, emojize("–ö–∞–∫ –Ω–∞–¥—É–º–∞–µ—à—å –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è:smiling_face_with_halo:"))

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–•–æ—á—É –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!", reply_markup=False)


    except:
        bot.send_message(call.message.chat.id, f"{name_bot} –Ω–µ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ")

if __name__ == '__main__':
    bot.polling(none_stop=True)
